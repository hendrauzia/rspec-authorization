{"name":"rspec-authorization","tagline":"RSpec matcher for declarative_authorization","body":"# RSpec::Authorization\r\n\r\n[![GitHub](http://img.shields.io/badge/github-hendrauzia/rspec--authorization-blue.svg)](http://github.com/hendrauzia/rspec-authorization)\r\n[![Documentation](http://img.shields.io/badge/docs-rdoc.info-blue.svg)](http://rubydoc.org/github/hendrauzia/rspec-authorization)\r\n[![License](http://img.shields.io/badge/license-MIT-blue.svg)](#license)\r\n\r\n[![Gem Version](https://badge.fury.io/rb/rspec-authorization.svg)](http://badge.fury.io/rb/rspec-authorization)\r\n[![Build Status](https://travis-ci.org/hendrauzia/rspec-authorization.svg)](https://travis-ci.org/hendrauzia/rspec-authorization)\r\n[![Code Climate](https://codeclimate.com/github/hendrauzia/rspec-authorization/badges/gpa.svg)](https://codeclimate.com/github/hendrauzia/rspec-authorization)\r\n[![Test Coverage](https://codeclimate.com/github/hendrauzia/rspec-authorization/badges/coverage.svg)](https://codeclimate.com/github/hendrauzia/rspec-authorization)\r\n[![Dependency Status](https://gemnasium.com/hendrauzia/rspec-authorization.svg)](https://gemnasium.com/hendrauzia/rspec-authorization)\r\n[![security](https://hakiri.io/github/hendrauzia/rspec-authorization/master.svg)](https://hakiri.io/github/hendrauzia/rspec-authorization/master)\r\n[![Inline docs](http://inch-ci.org/github/hendrauzia/rspec-authorization.svg?branch=master)](http://inch-ci.org/github/hendrauzia/rspec-authorization)\r\n\r\nRSpec matcher for declarative_authorization. A neat way of asserting\r\ndeclarative_authorization's rules inside controller using RSpec matcher.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n\r\n    gem 'rspec-authorization', group: :test, require: false\r\n\r\n\r\nAdd this to `spec_helper.rb`:\r\n\r\n\r\n    require 'rspec/authorization'\r\n\r\n\r\nAnd then execute:\r\n\r\n    bundle\r\n\r\nOr install it yourself as:\r\n\r\n    gem install rspec-authorization\r\n\r\n## Requirement\r\n\r\nCurrent development focus is as follows, future development may support other\r\ndependencies, following are requirements for this gem:\r\n\r\n- declarative_authorization 1.0.0.pre\r\n- rails 4.x\r\n- rspec-rails 3.1.x\r\n\r\n## Usage\r\n\r\nIn your controller spec:\r\n\r\n    describe ArticlesController do\r\n      it { is_expected.to have_permission_for(:a_role).to(:restful_action_name) }\r\n\r\n      it { is_expected.to have_permission_for(:writer).to(:index) }\r\n      it { is_expected.to have_permission_for(:writer).to(:show) }\r\n      it { is_expected.to have_permission_for(:writer).to(:new) }\r\n      it { is_expected.to have_permission_for(:writer).to(:create) }\r\n      it { is_expected.not_to have_permission_for(:writer).to(:edit) }\r\n      it { is_expected.not_to have_permission_for(:writer).to(:update) }\r\n      it { is_expected.not_to have_permission_for(:writer).to(:destroy) }\r\n    end\r\n\r\nYou can also use convenience restful helper methods:\r\n\r\n    describe ArticlesController do\r\n      it { is_expected.to have_permission_for(:user).to_read }\r\n      it { is_expected.not_to have_permission_for(:user).to_create }\r\n      it { is_expected.not_to have_permission_for(:user).to_update }\r\n      it { is_expected.not_to have_permission_for(:user).to_delete }\r\n\r\n      it { is_expected.to have_permission_for(:writer).to_read }\r\n      it { is_expected.to have_permission_for(:writer).to_create }\r\n      it { is_expected.to have_permission_for(:writer).to_update }\r\n      it { is_expected.not_to have_permission_for(:writer).to_delete }\r\n\r\n      it { is_expected.to have_permission_for(:editor).to_manage }\r\n    end\r\n\r\nOr you can also use the focused restful helper method as follows:\r\n\r\n    describe ArticlesController do\r\n      it { is_expected.to have_permision_for(:user).only_to_read }\r\n      it { is_expected.to have_permision_for(:writer).except_to_delete }\r\n    end\r\n\r\n## History\r\n\r\nSee {file:HISTORY.md} for history of changes.\r\n\r\n## License\r\n\r\nrspec-authorization &copy; 2014 by Hendra Uzia. rspec-authorization is\r\nlicensed under the MIT license except for some files which come from the\r\nRDoc/Ruby distributions. Please see the {file:LICENSE.txt} documents\r\nfor more information.\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/hendrauzia/rspec-authorization/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Setup rails test app (`bundle exec rake setup`)\r\n3. Test your changes (`bundle exec rake spec`)\r\n5. Commit your changes (`git commit -am 'Add some feature'`)\r\n6. Push to the branch (`git push origin my-new-feature`)\r\n7. Create a new Pull Request\r\n","google":"UA-60953022-1","note":"Don't delete this file! It's used internally to help with page regeneration."}